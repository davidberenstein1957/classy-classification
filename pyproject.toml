[tool.poetry]
name = "classy-classification"
version = "1.0.2"
description = "Have you every struggled with needing a Spacy TextCategorizer but didn't have the time to train one from scratch? Classy Classification is the way to go!"
authors = ["David Berenstein <david.m.berenstein@gmail.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/davidberenstein1957/classy-classification"
repository = "https://github.com/davidberenstein1957/classy-classification"
documentation = "https://github.com/davidberenstein1957/classy-classification"
keywords = ["spacy", "rasa", "few-shot classification", "nlu", "sentence-transformers"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development"
]
packages = [{include = "classy_classification"}]

[tool.poetry.dependencies]
python = ">=3.8,<3.12"
spacy = {extras = ["transformers"], version = "^3.0"}
sentence-transformers = ">2,<4"
scikit-learn = "^1.0"
pandas = ">1"
transformers = {extras = ["torch"], version = ">4.20,<5"}
setuptools = ">65.5.0"

[tool.poetry.plugins."spacy_factories"]
"spacy" = "classy_classification.__init__:make_text_categorizer"

[tool.poetry.dev-dependencies]
pytest = "^7.0.1"
flake8 = "^4.0.1"
black = "^22.3.0"
flake8-bugbear = "^22.3.23"
flake8-docstrings = "^1.6.0"
isort = "^5.10.1"
pep8-naming = "^0.12.1"
pre-commit = "^2.17.0"
jupyterlab = "^3.5.2"
ipython = "^8.8.0"
jupyter = "^1.0.0"
ipykernel = "^6.20.1"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = "tests"

[tool.black]
line-length = 119
experimental-string-processing = true

[tool.isort]
profile = "black"
src_paths = ["classy_classification"]
